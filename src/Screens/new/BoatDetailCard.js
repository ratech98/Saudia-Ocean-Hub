/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from "react";
import { Tooltip, Button } from "@mui/material";
import { styled } from "@mui/material/styles";
import Image1Image from "../../assets/Images/boat_carousal_1.png";
import { animated, useSpring, easings } from "react-spring";
import { StarRating } from "../../UI kit/5Star/StarRating";
import IMAGES from "../Images";

const TypeQuest = animated(
  styled("div")(({ theme }) => ({
    // backgroundColor: `rgba(250, 250, 250, 1)`,
    backgroundColor: "ButtonHighlight",
    boxShadow: `0px 4px 8px rgba(0, 0, 0, 0.16)`,
    borderRadius: `8px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    overflow: `hidden`,
    height: "auto",
    width: "375px", // Set the width to 300px
  }))
);

const ImageFrame = styled("div")({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  //   padding: `10px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Image1 = animated(
  styled("div")({
    backgroundPosition: `center`,
    // backgroundSize: `contain`,
    backgroundSize: `cover`,
    backgroundRepeat: `no-repeat`,
    // borderTopLeftRadius: `6px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    alignSelf: `stretch`,
    height: `251px`,
    margin: `0px`,
    border: `solid 0.5px rgba(66, 70, 81, 0.2)`,
    backgroundColor: "whitesmoke",
    borderRadius: `8px`,
  })
);

const Content = styled("div")({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 20px 35px 20px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Details = styled("div")({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TitleTop = styled("div")({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title = animated(
  styled("div")(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    // color: theme.palette["Text"]["Primary"],
    fontStyle: `bold`,
    // fontFamily: `Poppins`,
    fontWeight: `700`,
    fontSize: `26px`,
    letterSpacing: `normal`,
    // textDecoration: `underline`,
    textTransform: `none`,
    margin: `0px`,
    color: `#424651`,
    lineHeight: "1.5",
  }))
);

const SubTitle = animated(
  styled("div")(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    // color: theme.palette["Text"]["Primary"],
    fontStyle: `bold`,
    // fontFamily: `Poppins`,
    fontWeight: `normal`,
    fontSize: `20px`,
    letterSpacing: `normal`,
    // textDecoration: `underline`,
    textTransform: `none`,
    margin: `0px`,
    color: `rgba(66, 70, 81, 0.6)`,
    lineHeight: "1.5",
  }))
);

const Q3Dots = animated(
  styled("div")({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    width: `4px`,
    height: `20px`,
    margin: `0px`,
  })
);

const Rectangle1 = styled("div")(({ theme }) => ({
  //   backgroundColor: theme.palette["Text"]["Primary"],
  borderRadius: `10px`,
  width: `4px`,
  height: `4px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
}));

const Rectangle2 = styled("div")(({ theme }) => ({
  //   backgroundColor: theme.palette["Text"]["Primary"],
  borderRadius: `10px`,
  width: `4px`,
  height: `4px`,
  position: `absolute`,
  left: `0px`,
  top: `8px`,
}));

const Rectangle3 = styled("div")(({ theme }) => ({
  //   backgroundColor: theme.palette["Text"]["Primary"],
  borderRadius: `10px`,
  width: `4px`,
  height: `4px`,
  position: `absolute`,
  left: `0px`,
  top: `16px`,
}));

const Details1 = animated(
  styled("div")(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    // color: theme.palette["Text"]["Primary"],
    fontStyle: `normal`,
    fontFamily: `Heebo`,
    fontWeight: `400`,
    fontSize: `16px`,
    letterSpacing: `0.15000000596046448px`,
    textDecoration: `none`,
    lineHeight: `150%`,
    textTransform: `none`,
    alignSelf: `stretch`,
    margin: `12px 0px 0px 0px`,
  }))
);

const ButtonContained = animated(
  styled(Button)({
    margin: `12px 0px 0px 0px`,
  })
);

export const BoatDetailCard = ({
  boatName,
  marine_city = "city",
  starRating = 0,
  priceCurrency = "SAR",
  pricePerHour = 0,
  boatMaxCapacity = "1",
  profile_image,
}) => {
  const [TypeQuestSpring, TypeQuestApi] = useSpring(() => ({
    config: {
      duration: 100,
      easing: easings["easeOutBack"],
    },
    delay: 0,
    from: { transform: "scale(1)" },
  }));

  const [Image1Spring, Image1Api] = useSpring(() => ({
    config: {
      duration: 750,
      easing: easings["easeInOutQuint"],
    },
    delay: 1000,
    from: { transform: "scale(0.9)", opacity: 0 },
  }));

  const [TitleSpring, TitleApi] = useSpring(() => ({
    config: {
      duration: 500,
      easing: easings["easeInOutExpo"],
    },
    delay: 1250,
    from: { transform: "translateX(25px)", opacity: 0 },
  }));

  const [Q3DotsSpring, Q3DotsApi] = useSpring(() => ({
    config: {
      duration: 500,
      easing: easings["easeOutExpo"],
    },
    delay: 1250,
    from: { opacity: 0 },
  }));

  const [Details1Spring, Details1Api] = useSpring(() => ({
    config: {
      duration: 500,
      easing: easings["easeInOutExpo"],
    },
    delay: 1500,
    from: { transform: "translateY(15px)", opacity: 0 },
  }));

  const [ButtonContainedSpring, ButtonContainedApi] = useSpring(() => ({
    config: {
      duration: 500,
      easing: easings["easeInOutExpo"],
    },
    delay: 1750,
    from: { transform: "translateY(15px)", opacity: 0 },
  }));

  React.useEffect(() => {
    Image1Api.start({
      ...{ transform: "scale(1)", opacity: 1 },
      delay: 1000,
      config: { duration: 750 },
    });
    TitleApi.start({
      ...{ transform: "translateX(0px)", opacity: 1 },
      delay: 1250,
      config: { duration: 500 },
    });
    Q3DotsApi.start({
      ...{ opacity: 1 },
      delay: 1250,
      config: { duration: 500 },
    });
    Details1Api.start({
      ...{ transform: "translateY(0px)", opacity: 1 },
      delay: 1500,
      config: { duration: 500 },
    });
    ButtonContainedApi.start({
      ...{ transform: "translateY(0px)", opacity: 1 },
      delay: 1750,
      config: { duration: 500 },
    });
  }, []);

  return (
    <TypeQuest
      onMouseLeave={() => {
        TypeQuestApi.start({ transform: "scale(1)" });
      }}
      onMouseEnter={() => {
        TypeQuestApi.start({ ...{ transform: "scale(1.05)" }, delay: 0 });
      }}
      //   className={props.className}
      style={{ ...TypeQuestSpring }}
    >
      <ImageFrame>
        <Tooltip
          arrow={true}
          placement={"top"}
          title={"Click to view boat details"}
        >
          <Image1
            style={{
              ...Image1Spring,
              backgroundImage: `url(${profile_image ?? IMAGES.APP_ICON})`,
              backgroundSize: profile_image ? "cover" : "contain",
            }}
          ></Image1>
        </Tooltip>
      </ImageFrame>
      <Content>
        <Details>
          <TitleTop>
            <Title style={{ ...TitleSpring }}>{boatName}</Title>

            <Q3Dots style={{ ...Q3DotsSpring }}>
              <Rectangle1></Rectangle1>
              <Rectangle2></Rectangle2>
              <Rectangle3></Rectangle3>
            </Q3Dots>
          </TitleTop>
          <TitleTop>
            <SubTitle style={{ ...TitleSpring }}>{marine_city}</SubTitle>

            <Q3Dots style={{ ...Q3DotsSpring }}>
              <Rectangle1></Rectangle1>
              <Rectangle2></Rectangle2>
              <Rectangle3></Rectangle3>
            </Q3Dots>
          </TitleTop>
          <Details1 style={{ ...Details1Spring }}>
            <StarRating rating={starRating} />
          </Details1>
          {/* <ButtonContained
            variant="contained"
            size="large"
            // color="primary"
            // onClick={fns.handleButtonClick}
            style={{ ...ButtonContainedSpring }}
          >
            {" "}
            BOOK ME{" "}
          </ButtonContained> */}

          <Details1
            style={{
              ...ButtonContainedSpring,
              display: "flex",
              flexDirection: "row",
              justifyContent: "space-between",
            }}
          >
            <div style={{ display: "flex", flexDirection: "row" }}>
              <Image1
                style={{
                  ...Image1Spring,
                  backgroundImage: `url(${IMAGES.MONEY_CARD})`,
                  width: "28px",
                  height: "30px",
                  alignSelf: "center",
                  alignContent: "center",
                  alignItems: "center",
                }}
              />
              <Details1
                style={{
                  ...ButtonContainedSpring,
                  textAlign: "center",
                  alignSelf: "center",
                  fontSize: "16px",
                  fontWeight: "600",
                  margin: `0px 0px 0px 15px`,
                }}
              >
                {pricePerHour} {priceCurrency}
              </Details1>
            </div>
            <div style={{ display: "flex", flexDirection: "row" }}>
              <Image1
                style={{
                  ...Image1Spring,
                  backgroundImage: `url(${IMAGES.GROUP})`,
                  width: 36,
                  height: 25,
                  alignSelf: "center",
                  alignContent: "center",
                  alignItems: "center",
                }}
              />
              <Details1
                style={{
                  ...ButtonContainedSpring,
                  textAlign: "center",
                  alignSelf: "center",
                  fontSize: "16px",
                  fontWeight: "600",
                  margin: `0px 0px 0px 15px`,
                }}
              >
                {boatMaxCapacity}
              </Details1>
            </div>
          </Details1>
          {/* </TitleTop> */}
        </Details>
      </Content>
    </TypeQuest>
  );
};
